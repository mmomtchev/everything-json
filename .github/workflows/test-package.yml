name: Test npm package

on:
  workflow_call:
    inputs:
      package:
        type: string
        default: everything-json@latest
        description: package tarball or npm name to install
      download:
        type: boolean
        default: false
        description: whether the package artifact needs to be downloaded
  workflow_dispatch:
    inputs:
      package:
        type: string
        default: everything-json@latest
        description: package tarball or npm name to install


jobs:
  test_npm_binaries:
    runs-on: ${{ matrix.platform }}

    strategy:
      fail-fast: false
      matrix:
        platform:
          - ubuntu-22.04
          - windows-2019
          - windows-2022
          - macos-13
          - macos-14
        node-version: [18.x, 20.x, 22.x, 24.x]

    steps:
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: Download the package
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.package }}
        if: inputs.download
      - name: Create package.json
        run: npm init --yes
      - uses: actions/checkout@v4
        with:
          path: git-checkout
      - name: Set up the unit tests
        shell: bash
        run: mv git-checkout/test .
      - name: Install dependencies
        run: |
          npm i chai@4.4.1 chai-spies chai-as-promised mocha typescript ts-node tsconfig-paths @types/chai@4.3.11 @types/chai-as-promised @types/mocha @types/node @types/geojson piscina
      - name: Install everything-json from npm
        run: npm install ${{ inputs.package }}
        shell: bash
      - name: Node options (24)
        shell: bash
        run: echo 'MOCHA_NODE_OPTIONS=--node-option=no-experimental-strip-types --node-option=expose-gc' >> $GITHUB_ENV
        if: matrix.node-version == '24.x'
      - name: Node options (<24)
        shell: bash
        run: echo 'MOCHA_NODE_OPTIONS=--node-option=expose-gc' >> $GITHUB_ENV
        if: matrix.node-version != '24.x'
      - name: Run the unit tests
        run: |
          cd test
          npx mocha --require ts-node/register --types mocha --reporter=tap ${{env.MOCHA_NODE_OPTIONS}} *.test.ts *.standalone.*js
        env:
          TS_NODE_COMPILER_OPTIONS: '{ "strictNullChecks": true, "noEmit": true, "types": [ "node", "mocha", "chai", "chai-as-promised" ] }'


  test_npm_rebuild:
    runs-on: ${{ matrix.platform }}

    strategy:
      fail-fast: false
      matrix:
        platform:
          - ubuntu-22.04
          - windows-2022
          - macos-11
          - macos-12
          - macos-13
          - macos-14
        node-version: [18.x, 20.x, 22.x, 24.x]

    steps:
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: Download the package
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.package }}
        if: inputs.download
      - name: Create package.json
        run: npm init --yes
      - uses: actions/checkout@v4
        with:
          path: git-checkout
      - name: Set up the unit tests
        shell: bash
        run: mv git-checkout/test .
      - name: Install dependencies
        run: |
          npm i chai@4.4.1 chai-spies chai-as-promised mocha typescript ts-node tsconfig-paths @types/chai@4.3.11 @types/chai-as-promised @types/mocha @types/node @types/geojson piscina
      - name: Install everything-json from npm
        run: |
          [[ '${{ matrix.platform }}' =~ 'windows' ]] && subst M: `pwd` && cd M:/
          npm install ${{ inputs.package }} --build-from-source
        shell: bash
      - name: Node options (24)
        shell: bash
        run: echo 'MOCHA_NODE_OPTIONS=--node-option=no-experimental-strip-types --node-option=expose-gc' >> $GITHUB_ENV
        if: matrix.node-version == '24.x'
      - name: Node options (<24)
        shell: bash
        run: echo 'MOCHA_NODE_OPTIONS=--node-option=expose-gc' >> $GITHUB_ENV
        if: matrix.node-version != '24.x'
      - name: Run the unit tests
        run: |
          cd test
          npx mocha --require ts-node/register --types mocha --reporter=tap ${{env.MOCHA_NODE_OPTIONS}} *.test.ts *.standalone.*js
        env:
          TS_NODE_COMPILER_OPTIONS: '{ "strictNullChecks": true, "noEmit": true, "types": [ "node", "mocha", "chai", "chai-as-promised" ] }'
